system {
;; The host and port to listen at and connect to.
; endpoint = "localhost:42000"

;; The file system path used for persistent state.
; db-directory = "vast.db"

;; The file system path used for log files.
; log-directory = "vast.log"

;; Number of events to be packaged in a table slice (this is a target value that
;; can be underrun if the source has a low rate).
; table-slice-size = 100

;; The table slice type (default|arrow).
; table-slice-type = 'default'

;; The size of an index shard.
; max-partition-size = 1000000
}


logger {
;; File name template for output log file files (empty string disables logging).
;file-name = "[vast.directory]/log/[TIMESTAMP]#[PID]/vast.log"

;; format for rendering individual log file entries
;; valid format specifiers are:
;;  %c = logging category
;;  %C = class name
;;  %d = date
;;  %F = source file of the log statement
;;  %L = source line of the log statement
;;  %m = log message
;;  %M = source function of the log statement
;;  %n = newline
;;  %p = priority / severity of the message
;;  %r = time since application start
;;  %t = thread id
;;  %a = actor id
;;  %% = '%'
; file-format = "%r %c %p %a %t %C %M %F:%L %m%n"

;; Configures the minimum severity of messages that are written to the log file
;; (quiet|error|warning|info|verbose|debug|trace).
; file-verbosity = 'debug'

;; Mode for console log output generation (none|colored|uncolored).
; console = 'colored'

;; Format for printing individual log entries to the console (see file-format).
; console-format = "%m"

;; Configures the minimum severity of messages that are written to the console
;; (quiet|error|warning|info|verbose|debug|trace).
; console-verbosity = 'verbose'

;; Excludes listed components from logging (list of atoms).
; component-blacklist = ['caf', 'caf_flow', 'caf_stream']
}

; -- The below settings are internal to CAF, and are not checked by VAST
; -- directly. Please be careful when changing these options. Options in angle
; -- brackets have their default value determined at runtime.

scheduler {
;; accepted alternative: 'sharing'
; policy = 'stealing';

;; configures whether the scheduler generates profiling output
; enable-profiling = false

;; output file for profiler data (only if profiling is enabled)
; profiling-output-file = '/dev/null';

;; measurement resolution in milliseconds (only if profiling is enabled)
; profiling-resolution = 100ms

;; forces a fixed number of threads if set
; max-threads = <number of cores>

;; maximum number of messages actors can consume in one run
; max-throughput = <infinite>
}

; when using 'stealing' as scheduler policy
work-stealing {
;; number of zero-sleep-interval polling attempts
; aggressive-poll-attempts = 100

;; frequency of steal attempts during aggressive polling
; aggressive-steal-interval = 10

;; number of moderately aggressive polling attempts
; moderate-poll-attempts = 500

;; frequency of steal attempts during moderate polling
; moderate-steal-interval = 5

;; sleep interval between poll attempts
; moderate-sleep-duration = 50us

;; frequency of steal attempts during relaxed polling
; relaxed-steal-interval = 1

;; sleep interval between poll attempts
; relaxed-sleep-duration = 10ms
}

stream {
;; processing time per batch
; desired-batch-complexity = 50us;

;; maximum delay for partial batches
; max-batch-delay = 5ms;

;; time between emitting credit
; credit-round-interval = 10ms;
}
